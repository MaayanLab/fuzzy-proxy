apiVersion: v1
kind: ServiceAccount
metadata:
  name: fuzzy-proxy
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fuzzy-proxy
  namespace: kube-system
rules:
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fuzzy-proxy
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: fuzzy-proxy
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: fuzzy-proxy
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: fuzzy-proxy
  namespace: kube-system
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    workload.user.cattle.io/workloadselector: deployment-fuzzy-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fuzzy-proxy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-fuzzy-proxy
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-fuzzy-proxy
    spec:
      containers:
      - name: fuzzy-proxy
        image: maayanlab/fuzzy-proxy:1.1.3
        imagePullPolicy: IfNotPresent
        tty: true
        env:
        - name: KUBE_NAMESPACE
          value: '*'
      restartPolicy: Always
      serviceAccount: fuzzy-proxy